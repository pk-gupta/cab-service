
## Database Properties

# STG DB Config
#spring.datasource.url = jdbc:sqlserver://192.168.35.17\\MSSQLSERVER2016;databaseName=mFleet
#spring.datasource.username = CabService_User
#spring.datasource.password = b4&nW5#XMg

# DEV DB Config
spring.datasource.url = jdbc:sqlserver://192.168.35.18\\MSSQLSERVER2016;databaseName=mFleet
spring.datasource.username = mFleet_Dev_User 
spring.datasource.password = 2#U5BC*AnV?H

## LOCAL DB Config
#spring.datasource.url = jdbc:sqlserver://localhost;databaseName=mFleet
#spring.datasource.username = sa
#spring.datasource.password = Marlabs@123

spring.datasource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver

spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto = update
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.SQLServerDialect
spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext

## Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

## Tomcat Server Properties
server.port=7070
server.context-path=/mfleet
spring.main.web-environment=true

## Hibernate Properties
spring.session.store-type=none

## Email Server Config
spring.mail.host = mail.marlabs.com
spring.mail.smtp.port = 587
spring.mail.smtp.auth  = false 
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000
spring.mail.properties.mail.transport.protocol=smtp

## Application Log File configuration with Log4j2
#server.tomcat.accessLogEnabled=true
#server.tomcat.basedir=../logs
logging.config=classpath:log4j2-spring.xml
logging.path=../logs
logging.file=../logs/mfleet-logs/cab-service-logs.log

#Batch Configuration
spring.batch.initializer.enabled=false
spring.batch.job.enabled=false
batch.roster.excel.file.path=roster-data-file/CabServiceWorkSheet.xlsx

#Hibernate Search Configuration
## NOTE: CREATE PHYSICAL FOLDER AND SPECIFY FOLDER PATH AS MENTIONED IN PROPERTY spring.jpa.properties.hibernate.search.default.indexBase
spring.jpa.properties.hibernate.search.default.directory_provider=filesystem
#spring.jpa.properties.hibernate.search.default.indexBase=/var/lib/jenkins/mfleet_searchindex/lucene/indexes
#spring.jpa.properties.hibernate.search.default.indexBase=${user.dir}/var/lib/jenkins/mfleet_searchindex/lucene/indexes
spring.jpa.properties.hibernate.search.default.indexBase=D:/INFO_SYSTEMS/projects/CAB_SERVICE/GIT_REPO/mfleet_searchindex/lucene/indexes

hibernate.search.employeeDetails.optimizer.operation_limit.max = 10
hibernate.search.employeeDetails.optimizer.transaction_limit.max = 10

hibernate.search.assignCab.optimizer.operation_limit.max = 10
hibernate.search.assignCab.optimizer.transaction_limit.max = 10

hibernate.search.assignCabTrip.optimizer.operation_limit.max = 10
hibernate.search.assignCabTrip.optimizer.transaction_limit.max = 10

## Spring Session Management - Redis Data Store
## Set below password once Redis is installed in System. Ref: https://www.tutorialspoint.com/redis/connection_auth.htm
## IMPORTANT at UI SIDE : https://www.npmjs.com/package/connect-redis-sessions
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.password=4?9SF.2_nSJjmLwk
spring.redis.ssl=false
spring.session.store-type=redis
#server.session.timeout=30
security.sessions = NEVER
